<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <title>Controla F치cil</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="##000000">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Controla F치cil">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.12.10/dist/full.min.css" rel="stylesheet" type="text/css" />
    <%= favicon_link_tag 'favicon.png' %>
    <meta property="og:title" content="Controla F치cil" />
    <meta name="description" content="Controle sua vida financeira, f치cilmente com esse app minimalista  de controle financeiro feito pela Stark Software Desenvolvimento de sistemas">
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://controlafacil.starksoftware.tech" />
    <meta property="og:image" content="https://controlafacil.starksoftware.tech/logo.png" />
    <%= javascript_importmap_tags %>
    <%= tag.meta name: "vapid-public-key", content: Rails.configuration.x.vapid.public_key %>
    <%= tag.meta name: "user-id", content: current_user.id if user_signed_in? %>
    <script>
      const checkPermission = async () => {
        switch (Notification.permission) {
          case 'granted':
      console.log('Permission to receive notifications has been granted');
      break;
          case 'denied':
      console.log('Permission to receive notifications has been denied');
      break;
          default:
      const permission = await Notification.requestPermission();
      console.log(`Permission to receive notifications has been ${permission}`);
      break;
        }
      };

      checkPermission();

      const vapidPublicKey = document.querySelector(
        'meta[name="vapid-public-key"]',
      ).content;

      const subscribe = async () => {
        const registration = await navigator.serviceWorker.ready;

        let subscription = await registration.pushManager.getSubscription();

        if (!subscription) {
          subscription = await registration.pushManager.subscribe({
      userVisibleOnly: true,
      applicationServerKey: vapidPublicKey,
          });

          if (!subscription) {
      console.error('Web push subscription failed');
          }
        }

        return subscription;
      };
    </script>
  </head>
  <body data-controller="theme-switcher" data-theme="<%= user_theme %>">
    <%= render 'shared/navbar' %>
    <%= turbo_frame_tag :modal %>
    <main class="container mx-auto p-5 min-h-screen pt-28">
      <%= yield %>
      <%= render partial: 'shared/toast', locals: { message: flash[:notice], style: flash[:style] } %>
    </main>
    <button data-controller="register-push-notifications" class="btn btn-primary" data-action="register-push-notifications#registerPushNotifications">Subscribe</button>
    <%= render 'shared/footer' %>
  </body>
</html>
